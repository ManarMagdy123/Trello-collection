{
	"info": {
		"_postman_id": "f872ad66-6353-4847-8f52-a0b207629308",
		"name": "trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32091084"
	},
	"item": [
		{
			"name": "board",
			"item": [
				{
					"name": "create board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"board_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"test board name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"new board\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/?name=new board&key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "new board"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema= {\r",
									"    \"type\":\"object\",\r",
									"    \"properties\":{\r",
									"        \"name\":{\r",
									"            \"type\":\"string\"\r",
									"    \r",
									"        },\r",
									"        \"id\":{\r",
									"            \"type\":\"string\"\r",
									"        }\r",
									"    },\r",
									"    \"required\":[\r",
									"        \"name\",\r",
									"        \"id\"\r",
									"    ]\r",
									"};\r",
									"pm.test(\"testing schema\",function()\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"test id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"board_id\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/boards/:id?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{board_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"test board name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"updated board\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/boards/:id?key={{key}}&token={{token}}&name=updated board",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"boards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "updated board"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{board_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "list",
			"item": [
				{
					"name": "create list with body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"list_id\", jsonData.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"test list name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"new list\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "cookie",
								"value": "ajs_anonymous_id=%220bdb87c4-15a3-981c-8919-121d9b5f1da3%22; atl_xid.current=%5B%7B%22type%22%3A%22xc%22%2C%22value%22%3A%22532ac2f0-650b-42fd-8c7a-a7af4b652373%22%2C%22createdAt%22%3A%222023-10-11T06%3A17%3A24.294Z%22%7D%5D; _mkto_trk=id:594-ATC-127&token:_mch-trello.com-1704298893656-54145; dsc=5e9921197f1e3c2160fed561634440850a14a2bda86256c9f1ae4251cbad1f15; _gcl_au=1.1.1267640610.1716555455; atlassian.account.xsrf.token=2279f121-b8e4-4639-9094-097f84cba9a9; loggedIn=1; lang=en-GB; hasAccount=atlassian; _uetvid=3b61aca0aa5411eebd193751010eced3; aaId=712020%3A7ff889c5-c7f1-464a-94b2-5a5a9c465369; idMember=659589a68dc93ca80e7704f0; atlCohort={\"bucketAll\":{\"bucketedAtUTC\":\"2024-05-24T13:00:58.154Z\",\"version\":\"2\",\"index\":23,\"bucketId\":0}}; atl_xid.ts=1716555660689; atlUserHash=1393648548; OptanonConsent=isGpcEnabled=0&datestamp=Fri+May+24+2024+16%3A01%3A02+GMT%2B0300+(Eastern+European+Summer+Time)&version=202403.2.0&browserGpcFlag=0&isIABGlobal=false&consentId=712020%3A7ff889c5-c7f1-464a-94b2-5a5a9c465369&hosts=&landingPath=NotLandingPage&groups=1%3A1%2C2%3A1%2C3%3A1%2C4%3A1&identifierType=null&AwaitingReconsent=false; OptanonAlertBoxClosed=2024-05-24T13:01:02.136Z; __cid=e387QyAlJ8l3PyPzmgxXlnrSgo4BF5OTAohsjhKNed4mD2eNYYpXoxm8b7AMzpOKTosa0cguMItzGmWGXoVn8WXmKuF74AviYKZSoDGpT9lo5wPhdvpHwFWpVr4vuVyuVuAJuDWyR_Y3vU6uQPkX4mTeAuxK4BOhNLpQoDK_R6ZKwTPDTaVH4mjiAq5G7ATlbqBHzWn7CONkpla8NKdXoDGnV65S6AHvc-BIuzK-Sb035W-_Nbtf7zS7AfkCjuyOlYEEvDe9BrZn7fvWQMcgwkSpT8dv_QLiLaku4HXsC6ZToEfHc-AUplOgR9ZkqSD8YPkP52L6R6Yx8Ve-MblezzWwTq5F4BXrYv1UyjC4R_hy1lLRMakX_V68OL4tqSO9RbhWp6WdVqEwpla3NrlLrjOzV747uVeuQMTIhgE8RkuwgayO0oi6DVduZ2UCfjpLqjzvcQPBp44BiWeOAYlnjgGJZ44BiWeOAYlnjgGJZ44BiWeOAYlnjkHJJ85ByWeOAYlnjgGJZ44BiSeOAYlnjgGJZ44BiZg; cloud.session.token=eyJraWQiOiJzZXNzaW9uLXNlcnZpY2UvcHJvZC0xNTkyODU4Mzk0IiwiYWxnIjoiUlMyNTYifQ.eyJhc3NvY2lhdGlvbnMiOlt7ImFhSWQiOiI3MTIwMjA6MWEzYWYyOWQtZWFjMS00ZGRkLWJkNDQtOWMzNmZjZTQyOTFlIiwic2Vzc2lvbklkIjoiZTEyODJhZGItYWEwMS00OTliLThjMTEtNjdkNDZkOGY4MjRiIiwiZW1haWwiOiJtYW5hci5tYWdkeUBhaW10ZWNobm9sb2dpZXMuY28ifV0sInN1YiI6IjcxMjAyMDo3ZmY4ODljNS1jN2YxLTQ2NGEtOTRiMi01YTVhOWM0NjUzNjkiLCJlbWFpbERvbWFpbiI6ImdtYWlsLmNvbSIsImltcGVyc29uYXRpb24iOltdLCJjcmVhdGVkIjoxNzE2NTU1NjU3LCJyZWZyZXNoVGltZW91dCI6MTcxNzY2NzA2MSwidmVyaWZpZWQiOnRydWUsImlzcyI6InNlc3Npb24tc2VydmljZSIsInNlc3Npb25JZCI6ImU5MGUwZDNlLTQwMzEtNDE2MS1iYjc3LTBmYjIyNzNjMzg2MSIsInN0ZXBVcHMiOltdLCJhdWQiOiJhdGxhc3NpYW4iLCJuYmYiOjE3MTc2NjY0NjEsImV4cCI6MTcyMDI1ODQ2MSwiaWF0IjoxNzE3NjY2NDYxLCJlbWFpbCI6Im1hbmFyLm1hZ2R5NTY0QGdtYWlsLmNvbSIsImp0aSI6ImU5MGUwZDNlLTQwMzEtNDE2MS1iYjc3LTBmYjIyNzNjMzg2MSJ9.Bm3uSABbEI6_ODjcP3fcUH3VxKRNQmq5pqHN8XpUflAS66EBux8CeVnj66Dg76fPqiy6pVidJ3ni0pIejPaDj2WKu-ExYaxZF-04MJuqYmHzeBg8BWGaTrvYAXrEl72hLmzbeDrQMqFM0TEis7NIXSIk0VFpXotrrnT-XD58ZoBqjONF3WgHt7HHa9WQxZHQ951C_kCKwPMn1_P45HiTVTv_AT8AtS0QQLK_xDlqXjw7AyXDPlMRj5QJoNRptjfpwDXdgghRwW06rau7WC4DwYPL4HhoZ4DU-Ty6CwNGRZrCorGxGsdXbDi3UamXM9xIr_L-OOYcw79ZK8ld-mip5Q"
							},
							{
								"key": "origin",
								"value": "https://trello.com"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://trello.com/b/9wiUHLBM/new-board"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"125\", \"Chromium\";v=\"125\", \"Not.A/Brand\";v=\"24\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36"
							},
							{
								"key": "x-b3-spanid",
								"value": "0e8f02d1ac0082e3"
							},
							{
								"key": "x-b3-traceid",
								"value": "666182b354fb47f45d6e179850949740"
							},
							{
								"key": "x-trello-client-version",
								"value": "build-202974"
							},
							{
								"key": "x-trello-task",
								"value": "create-list"
							},
							{
								"key": "x-trello-traceid",
								"value": "666182b354fb47f45d6e179850949740"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idBoard\": \"{{board_id}}\",\r\n    \"name\": \"new list\",\r\n    \"pos\": 114688,\r\n    \"dsc\": \"5e9921197f1e3c2160fed561634440850a14a2bda86256c9f1ae4251cbad1f15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://trello.com/1/lists",
							"protocol": "https",
							"host": [
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"name": "get list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema= {\r",
									"    \"type\":\"object\",\r",
									"    \"properties\":{\r",
									"        \"name\":{\r",
									"            \"type\":\"string\"\r",
									"    \r",
									"        },\r",
									"        \"id\":{\r",
									"            \"type\":\"string\"\r",
									"        }\r",
									"    },\r",
									"    \"required\":[\r",
									"        \"name\",\r",
									"        \"id\"\r",
									"    ]\r",
									"};\r",
									"pm.test(\"testing schema\",function()\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"test list id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"list_id\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/:id?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{list_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"test list name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"updated list\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/:id?key={{key}}&token={{token}}&name=updated list",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "updated list"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{list_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "card",
			"item": [
				{
					"name": "create card with body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"card_id\", jsonData.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\" test card name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"new card\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "accept-language",
								"value": "en-GB,en;q=0.9,ar-AE;q=0.8,ar;q=0.7,en-US;q=0.6"
							},
							{
								"key": "content-type",
								"value": "application/json"
							},
							{
								"key": "cookie",
								"value": "ajs_anonymous_id=%220bdb87c4-15a3-981c-8919-121d9b5f1da3%22; atl_xid.current=%5B%7B%22type%22%3A%22xc%22%2C%22value%22%3A%22532ac2f0-650b-42fd-8c7a-a7af4b652373%22%2C%22createdAt%22%3A%222023-10-11T06%3A17%3A24.294Z%22%7D%5D; _mkto_trk=id:594-ATC-127&token:_mch-trello.com-1704298893656-54145; dsc=5e9921197f1e3c2160fed561634440850a14a2bda86256c9f1ae4251cbad1f15; _gcl_au=1.1.1267640610.1716555455; atlassian.account.xsrf.token=2279f121-b8e4-4639-9094-097f84cba9a9; loggedIn=1; lang=en-GB; hasAccount=atlassian; _uetvid=3b61aca0aa5411eebd193751010eced3; aaId=712020%3A7ff889c5-c7f1-464a-94b2-5a5a9c465369; idMember=659589a68dc93ca80e7704f0; atlCohort={\"bucketAll\":{\"bucketedAtUTC\":\"2024-05-24T13:00:58.154Z\",\"version\":\"2\",\"index\":23,\"bucketId\":0}}; atl_xid.ts=1716555660689; atlUserHash=1393648548; OptanonConsent=isGpcEnabled=0&datestamp=Fri+May+24+2024+16%3A01%3A02+GMT%2B0300+(Eastern+European+Summer+Time)&version=202403.2.0&browserGpcFlag=0&isIABGlobal=false&consentId=712020%3A7ff889c5-c7f1-464a-94b2-5a5a9c465369&hosts=&landingPath=NotLandingPage&groups=1%3A1%2C2%3A1%2C3%3A1%2C4%3A1&identifierType=null&AwaitingReconsent=false; OptanonAlertBoxClosed=2024-05-24T13:01:02.136Z; __cid=e387QyAlJ8l3PyPzmgxXlnrSgo4BF5OTAohsjhKNed4mD2eNYYpXoxm8b7AMzpOKTosa0cguMItzGmWGXoVn8WXmKuF74AviYKZSoDGpT9lo5wPhdvpHwFWpVr4vuVyuVuAJuDWyR_Y3vU6uQPkX4mTeAuxK4BOhNLpQoDK_R6ZKwTPDTaVH4mjiAq5G7ATlbqBHzWn7CONkpla8NKdXoDGnV65S6AHvc-BIuzK-Sb035W-_Nbtf7zS7AfkCjuyOlYEEvDe9BrZn7fvWQMcgwkSpT8dv_QLiLaku4HXsC6ZToEfHc-AUplOgR9ZkqSD8YPkP52L6R6Yx8Ve-MblezzWwTq5F4BXrYv1UyjC4R_hy1lLRMakX_V68OL4tqSO9RbhWp6WdVqEwpla3NrlLrjOzV747uVeuQMTIhgE8RkuwgayO0oi6DVduZ2UCfjpLqjzvcQPBp44BiWeOAYlnjgGJZ44BiWeOAYlnjgGJZ44BiWeOAYlnjkHJJ85ByWeOAYlnjgGJZ44BiSeOAYlnjgGJZ44BiZg; cloud.session.token=eyJraWQiOiJzZXNzaW9uLXNlcnZpY2UvcHJvZC0xNTkyODU4Mzk0IiwiYWxnIjoiUlMyNTYifQ.eyJhc3NvY2lhdGlvbnMiOlt7ImFhSWQiOiI3MTIwMjA6MWEzYWYyOWQtZWFjMS00ZGRkLWJkNDQtOWMzNmZjZTQyOTFlIiwic2Vzc2lvbklkIjoiZTEyODJhZGItYWEwMS00OTliLThjMTEtNjdkNDZkOGY4MjRiIiwiZW1haWwiOiJtYW5hci5tYWdkeUBhaW10ZWNobm9sb2dpZXMuY28ifV0sInN1YiI6IjcxMjAyMDo3ZmY4ODljNS1jN2YxLTQ2NGEtOTRiMi01YTVhOWM0NjUzNjkiLCJlbWFpbERvbWFpbiI6ImdtYWlsLmNvbSIsImltcGVyc29uYXRpb24iOltdLCJjcmVhdGVkIjoxNzE2NTU1NjU3LCJyZWZyZXNoVGltZW91dCI6MTcxNzY2Nzc5MCwidmVyaWZpZWQiOnRydWUsImlzcyI6InNlc3Npb24tc2VydmljZSIsInNlc3Npb25JZCI6ImU5MGUwZDNlLTQwMzEtNDE2MS1iYjc3LTBmYjIyNzNjMzg2MSIsInN0ZXBVcHMiOltdLCJhdWQiOiJhdGxhc3NpYW4iLCJuYmYiOjE3MTc2NjcxOTAsImV4cCI6MTcyMDI1OTE5MCwiaWF0IjoxNzE3NjY3MTkwLCJlbWFpbCI6Im1hbmFyLm1hZ2R5NTY0QGdtYWlsLmNvbSIsImp0aSI6ImU5MGUwZDNlLTQwMzEtNDE2MS1iYjc3LTBmYjIyNzNjMzg2MSJ9.g-UO6bqO_mgdLs_MaYDhJFPwxdTgML_W30x2sX6egdsDDbwKXyeM-ZZUuSvJcxi_cCidoUzO7uhKIpuIR_0ZQYzp6EdCNc4mtCOpKhJX3kR_hjJp5GJDVngO9YYkK3BeNzFa8K1_ayujjPlNt5xkfhju_Xp_sfsl7oDQUGWH_OBreHAtbqsmVeE1bHRPJqhd8S5fdsO0p2VVY2lNQ1wxVFPPj7HCrltB5q6VxiaaTSfIgUQeDJOamLOwmQ-oebocqKmUXW_T_AptKbXzLYkWRx125a65gHivUUEplNp79KKSWkvnk1Wp5xRcbIYHw3XddYztO5K-15fs5zIqrodSAQ"
							},
							{
								"key": "origin",
								"value": "https://trello.com"
							},
							{
								"key": "priority",
								"value": "u=1, i"
							},
							{
								"key": "referer",
								"value": "https://trello.com/b/CQU9EAPX/new-board-test"
							},
							{
								"key": "sec-ch-ua",
								"value": "\"Google Chrome\";v=\"125\", \"Chromium\";v=\"125\", \"Not.A/Brand\";v=\"24\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"Windows\""
							},
							{
								"key": "sec-fetch-dest",
								"value": "empty"
							},
							{
								"key": "sec-fetch-mode",
								"value": "cors"
							},
							{
								"key": "sec-fetch-site",
								"value": "same-origin"
							},
							{
								"key": "user-agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36"
							},
							{
								"key": "x-b3-spanid",
								"value": "988a6b9dbcbe5e35"
							},
							{
								"key": "x-b3-traceid",
								"value": "666185f9da045435d4481a72465d6268"
							},
							{
								"key": "x-trello-client-version",
								"value": "build-202974"
							},
							{
								"key": "x-trello-task",
								"value": "create-card/list"
							},
							{
								"key": "x-trello-traceid",
								"value": "666185f9da045435d4481a72465d6268"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idList\": \"{{list_id}}\",\r\n    \"name\": \"new card\",\r\n    \"closed\": false,\r\n    \"isTemplate\": false,\r\n    \"pos\": 65536,\r\n    \"cardRole\": null,\r\n    \"dsc\": \"5e9921197f1e3c2160fed561634440850a14a2bda86256c9f1ae4251cbad1f15\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://trello.com/1/cards",
							"protocol": "https",
							"host": [
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "get card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema= {\r",
									"    \"type\":\"object\",\r",
									"    \"properties\":{\r",
									"        \"name\":{\r",
									"            \"type\":\"string\"\r",
									"    \r",
									"        },\r",
									"        \"id\":{\r",
									"            \"type\":\"string\"\r",
									"        }\r",
									"    },\r",
									"    \"required\":[\r",
									"        \"name\",\r",
									"        \"id\"\r",
									"    ]\r",
									"};\r",
									"pm.test(\"testing schema\",function()\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"test list id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"card_id\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/:id?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{card_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\" test card name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"updated card name\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.trello.com/1/cards/:id?key={{key}}&token={{token}}&name=updated card name",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "updated card name"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{card_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"delete card is wrong\", function () {\r",
									"    pm.response.to.have.body(\"invalid id\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"card_id\", \"12345\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/cards/:id?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"cards",
								":id"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{card_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}